AWSTemplateFormatVersion: '2010-09-09'
Description: 'ElastiCache Redis for NebengJek - Final Fixed Version'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: The deployment environment

  VpcId:
    Type: String
    Description: VPC ID where Redis will be deployed

  PrivateSubnet1:
    Type: String
    Description: First private subnet for Redis

  PrivateSubnet2:
    Type: String
    Description: Second private subnet for Redis

  RedisNodeType:
    Type: String
    Default: cache.t3.micro
    Description: Redis node type
    AllowedValues:
      - cache.t3.micro
      - cache.t3.small
      - cache.t3.medium
      - cache.r6g.large

Resources:
  # Security Group for Redis
  RedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ElastiCache Redis
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 10.0.0.0/16
          Description: Redis access from VPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-redis-sg'

  # Redis Subnet Group
  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet group for Redis
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  # Redis Parameter Group
  RedisParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupFamily: redis7
      Description: !Sub '${Environment} Redis parameter group'
      Properties:
        maxmemory-policy: allkeys-lru
        timeout: 300

  # ElastiCache Redis Cluster - FIXED VERSION
  RedisCluster:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupId: !Sub '${Environment}-nebengjek-redis'
      ReplicationGroupDescription: !Sub '${Environment} Redis cluster for NebengJek' # FIXED: was "Description"

      # Redis Configuration
      Engine: redis
      EngineVersion: 7.0
      CacheNodeType: !Ref RedisNodeType
      Port: 6379

      # Replication Configuration
      NumCacheClusters: 2 # 1 primary + 1 replica
      AutomaticFailoverEnabled: true
      MultiAZEnabled: true

      # Network Configuration
      CacheSubnetGroupName: !Ref RedisSubnetGroup
      SecurityGroupIds:
        - !Ref RedisSecurityGroup

      # Parameter Group
      CacheParameterGroupName: !Ref RedisParameterGroup

      # Backup Configuration
      SnapshotRetentionLimit: 1
      SnapshotWindow: '03:00-05:00'
      PreferredMaintenanceWindow: 'sun:05:00-sun:07:00'

      # Security
      AtRestEncryptionEnabled: true
      TransitEncryptionEnabled: false

      Tags:
        - Key: Name
          Value: !Sub '${Environment}-nebengjek-redis'

Outputs:
  RedisEndpoint:
    Description: Redis primary endpoint
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Address
    Export:
      Name: !Sub '${Environment}-RedisEndpoint'

  RedisPort:
    Description: Redis port
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Port
    Export:
      Name: !Sub '${Environment}-RedisPort'

  RedisHost:
    Description: Redis host (for services that need host only)
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Address
    Export:
      Name: !Sub '${Environment}-RedisHost'

  RedisClusterName:
    Description: Redis cluster name
    Value: !Ref RedisCluster
    Export:
      Name: !Sub '${Environment}-RedisCluster'

  RedisSecurityGroupId:
    Description: Security Group ID for Redis
    Value: !Ref RedisSecurityGroup
    Export:
      Name: !Sub '${Environment}-RedisSecurityGroupId'
