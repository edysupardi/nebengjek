AWSTemplateFormatVersion: '2010-09-09'
Description: 'Minimal Matching Service - No IAM/ECS Creation'

Parameters:
  Environment:
    Type: String
    Default: dev

  VpcId:
    Type: String
    Description: VPC ID
    Default: vpc-021b849d6600dd8b7

  PrivateSubnet1:
    Type: String
    Description: Private subnet 1
    Default: subnet-xxx # You need to get this from VPC stack

  PrivateSubnet2:
    Type: String
    Description: Private subnet 2
    Default: subnet-yyy # You need to get this from VPC stack

Resources:
  # Only create what we CAN create (EC2 and Logs resources)

  MatchingServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Matching Service
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3003
          ToPort: 3003
          CidrIp: 10.0.0.0/16
          Description: Matching Service HTTP port
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-matching-service-sg'

  MatchingServiceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/${Environment}/matching-service'
      RetentionInDays: 7

  # Target Group for Load Balancer (if ALB exists)
  MatchingServiceTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${Environment}-matching-tg'
      Port: 3003
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckEnabled: true
      HealthCheckPath: /health
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-matching-service-tg'

Outputs:
  SecurityGroupId:
    Description: Security Group ID for Matching Service
    Value: !Ref MatchingServiceSecurityGroup
    Export:
      Name: !Sub '${Environment}-MatchingServiceSecurityGroup'

  LogGroupName:
    Description: CloudWatch Log Group for Matching Service
    Value: !Ref MatchingServiceLogGroup
    Export:
      Name: !Sub '${Environment}-MatchingServiceLogGroup'

  TargetGroupArn:
    Description: Target Group ARN for Matching Service
    Value: !Ref MatchingServiceTargetGroup
    Export:
      Name: !Sub '${Environment}-MatchingServiceTargetGroup'
