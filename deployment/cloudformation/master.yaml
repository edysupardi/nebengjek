AWSTemplateFormatVersion: '2010-09-09'
Description: 'NebengJek Microservices Stack'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: The deployment environment
    
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where the resources will be deployed
    
  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: First private subnet
    
  PrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Second private subnet
    
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: First public subnet
    
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Second public subnet
    
  ECRRepository:
    Type: String
    Description: ECR repository name prefix
    Default: nebengjek
    
  ECSClusterName:
    Type: String
    Description: Name of the ECS cluster
    Default: nebengjek-cluster
    
  DatabaseMasterUsername:
    Type: String
    Default: admin
    Description: Database master username
    NoEcho: true
    
  DatabaseMasterPassword:
    Type: String
    Description: Database master password
    NoEcho: true
    
  SSLCertificateARN:
    Type: String
    Description: ARN of the SSL certificate for HTTPS
    Default: ''

Resources:
  # Networking
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/network.yaml
      Parameters:
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        PublicSubnet1: !Ref PublicSubnet1
        PublicSubnet2: !Ref PublicSubnet2
        Environment: !Ref Environment
  
  # Database
  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/database.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        DatabaseMasterUsername: !Ref DatabaseMasterUsername
        DatabaseMasterPassword: !Ref DatabaseMasterPassword
  
  # Redis
  RedisStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/redis.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
  
  # ECS Cluster
  ECSClusterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/ecs-cluster.yaml
      Parameters:
        Environment: !Ref Environment
        ECSClusterName: !Ref ECSClusterName
  
  # API Gateway
  ApiGatewayStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
      - ECSClusterStack
      - RedisStack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/api-gateway.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        PublicSubnet1: !Ref PublicSubnet1
        PublicSubnet2: !Ref PublicSubnet2
        ECSClusterName: !Ref ECSClusterName
        ECRRepository: !Sub "${ECRRepository}/api-gateway"
        SSLCertificateARN: !Ref SSLCertificateARN
        RedisEndpoint: !GetAtt RedisStack.Outputs.RedisEndpoint
  
  # User Service
  UserServiceStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
      - ECSClusterStack
      - DatabaseStack
      - RedisStack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/user-service.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        ECSClusterName: !Ref ECSClusterName
        ECRRepository: !Sub "${ECRRepository}/user-service"
        DatabaseEndpoint: !GetAtt DatabaseStack.Outputs.DatabaseEndpoint
        DatabaseName: !GetAtt DatabaseStack.Outputs.UserServiceDatabaseName
        DatabaseUsername: !GetAtt DatabaseStack.Outputs.UserServiceDatabaseUsername
        DatabasePassword: !GetAtt DatabaseStack.Outputs.UserServiceDatabasePassword
        RedisEndpoint: !GetAtt RedisStack.Outputs.RedisEndpoint
  
  # Booking Service
  BookingServiceStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
      - ECSClusterStack
      - DatabaseStack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/booking-service.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        ECSClusterName: !Ref ECSClusterName
        ECRRepository: !Sub "${ECRRepository}/booking-service"
        DatabaseEndpoint: !GetAtt DatabaseStack.Outputs.DatabaseEndpoint
        DatabaseName: !GetAtt DatabaseStack.Outputs.BookingServiceDatabaseName
        DatabaseUsername: !GetAtt DatabaseStack.Outputs.BookingServiceDatabaseUsername
        DatabasePassword: !GetAtt DatabaseStack.Outputs.BookingServiceDatabasePassword
  
  # Matching Service
  MatchingServiceStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
      - ECSClusterStack
      - DatabaseStack
      - RedisStack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/matching-service.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        ECSClusterName: !Ref ECSClusterName
        ECRRepository: !Sub "${ECRRepository}/matching-service"
        RedisEndpoint: !GetAtt RedisStack.Outputs.RedisEndpoint
  
  # Payment Service
  PaymentServiceStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
      - ECSClusterStack
      - DatabaseStack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/payment-service.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        ECSClusterName: !Ref ECSClusterName
        ECRRepository: !Sub "${ECRRepository}/payment-service"
        DatabaseEndpoint: !GetAtt DatabaseStack.Outputs.DatabaseEndpoint
        DatabaseName: !GetAtt DatabaseStack.Outputs.PaymentServiceDatabaseName
        DatabaseUsername: !GetAtt DatabaseStack.Outputs.PaymentServiceDatabaseUsername
        DatabasePassword: !GetAtt DatabaseStack.Outputs.PaymentServiceDatabasePassword
  
  # Notification Service
  NotificationServiceStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
      - ECSClusterStack
      - DatabaseStack
      - RedisStack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/notification-service.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        ECSClusterName: !Ref ECSClusterName
        ECRRepository: !Sub "${ECRRepository}/notification-service"
        DatabaseEndpoint: !GetAtt DatabaseStack.Outputs.DatabaseEndpoint
        DatabaseName: !GetAtt DatabaseStack.Outputs.NotificationServiceDatabaseName
        DatabaseUsername: !GetAtt DatabaseStack.Outputs.NotificationServiceDatabaseUsername
        DatabasePassword: !GetAtt DatabaseStack.Outputs.NotificationServiceDatabasePassword
        RedisEndpoint: !GetAtt RedisStack.Outputs.RedisEndpoint
  
  # Tracking Service
  TrackingServiceStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
      - ECSClusterStack
      - DatabaseStack
      - RedisStack
    Properties:
      TemplateURL: https://s3.amazonaws.com/nebengjek-cfn-templates/tracking-service.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        ECSClusterName: !Ref ECSClusterName
        ECRRepository: !Sub "${ECRRepository}/tracking-service"
        DatabaseEndpoint: !GetAtt DatabaseStack.Outputs.DatabaseEndpoint
        DatabaseName: !GetAtt DatabaseStack.Outputs.TrackingServiceDatabaseName
        DatabaseUsername: !GetAtt DatabaseStack.Outputs.TrackingServiceDatabaseUsername
        DatabasePassword: !GetAtt DatabaseStack.Outputs.TrackingServiceDatabasePassword
        RedisEndpoint: !GetAtt RedisStack.Outputs.RedisEndpoint

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint
    Value: !GetAtt ApiGatewayStack.Outputs.ApiEndpoint
    
  UserServiceUrl:
    Description: User Service internal URL
    Value: !GetAtt UserServiceStack.Outputs.ServiceUrl
    
  BookingServiceUrl:
    Description: Booking Service internal URL
    Value: !GetAtt BookingServiceStack.Outputs.ServiceUrl
    
  MatchingServiceUrl:
    Description: Matching Service internal URL
    Value: !GetAtt MatchingServiceStack.Outputs.ServiceUrl
    
  PaymentServiceUrl:
    Description: Payment Service internal URL
    Value: !GetAtt PaymentServiceStack.Outputs.ServiceUrl
    
  NotificationServiceUrl:
    Description: Notification Service internal URL
    Value: !GetAtt NotificationServiceStack.Outputs.ServiceUrl
    
  TrackingServiceUrl:
    Description: Tracking Service internal URL
    Value: !GetAtt TrackingServiceStack.Outputs.ServiceUrl