version: '3.8'

services:
  # User Service
  user-service:
    build:
      context: .
      dockerfile: ./deployment/docker/user-service.dockerfile
    ports:
      - "${USER_PORT:-3001}:${USER_PORT:-3001}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_ACCESS_EXPIRES_IN=${JWT_ACCESS_EXPIRES_IN:-15m}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      - USER_PORT=${USER_PORT:-3001}
    # Remove postgres and redis dependencies since using external
    volumes:
      - ./apps/user-service:/app/apps/user-service
      - ./libs:/app/libs
      - ./prisma:/app/prisma
    networks:
      - nebengjek-network
    restart: unless-stopped

  # Booking Service
  booking-service:
    build:
      context: .
      dockerfile: ./deployment/docker/booking-service.dockerfile
    ports:
      - "${BOOKING_PORT:-3002}:${BOOKING_PORT:-3002}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - BOOKING_PORT=${BOOKING_PORT:-3002}
      - TRACKING_SERVICE_HOST=${TRACKING_SERVICE_HOST:-tracking-service}
      - TRACKING_PORT=${TRACKING_PORT:-3003}
      - NOTIFICATION_SERVICE_HOST=${NOTIFICATION_SERVICE_HOST:-notification-service}
      - NOTIFICATION_PORT=${NOTIFICATION_PORT:-3004}
      - MATCHING_SERVICE_HOST=${MATCHING_SERVICE_HOST:-matching-service}
      - MATCHING_PORT=${MATCHING_PORT:-3006}
      # TCP client connections
      - MATCHING_TCP_PORT=8006
      - NOTIFICATION_TCP_PORT=8004
      - TRACKING_TCP_PORT=8003
    volumes:
      - ./apps/booking-service:/app/apps/booking-service
      - ./libs:/app/libs
      - ./prisma:/app/prisma
    networks:
      - nebengjek-network
    restart: unless-stopped
    depends_on:
      - matching-service
      - notification-service
      - tracking-service

  # Tracking Service
  tracking-service:
    build:
      context: .
      dockerfile: ./deployment/docker/tracking-service.dockerfile
    ports:
      - "${TRACKING_PORT:-3003}:${TRACKING_PORT:-3003}"
      - "${TRACKING_WS_PORT:-3060}:${TRACKING_WS_PORT:-3060}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - TRACKING_PORT=${TRACKING_PORT:-3003}
      - TRACKING_WS_PORT=${TRACKING_WS_PORT:-3060}
    volumes:
      - ./apps/tracking-service:/app/apps/tracking-service
      - ./libs:/app/libs
      - ./prisma:/app/prisma
    networks:
      - nebengjek-network
    restart: unless-stopped

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: ./deployment/docker/notification-service.dockerfile
    ports:
      - "${NOTIFICATION_PORT:-3004}:${NOTIFICATION_PORT:-3004}"
      - "${NOTIFICATION_WS_PORT:-3050}:${NOTIFICATION_WS_PORT:-3050}"
      - "${NOTIFICATION_TCP_PORT:-3050}:${NOTIFICATION_TCP_PORT:-3050}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - NOTIFICATION_PORT=${NOTIFICATION_PORT:-3004}
      - NOTIFICATION_WS_PORT=${NOTIFICATION_WS_PORT:-3050}
      - NOTIFICATION_TCP_PORT=8004
    volumes:
      - ./apps/notification-service:/app/apps/notification-service
      - ./libs:/app/libs
      - ./prisma:/app/prisma
    networks:
      - nebengjek-network
    restart: unless-stopped

  # Payment Service
  payment-service:
    build:
      context: .
      dockerfile: ./deployment/docker/payment-service.dockerfile
    ports:
      - "${PAYMENT_PORT:-3005}:${PAYMENT_PORT:-3005}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PAYMENT_PORT=${PAYMENT_PORT:-3005}
    volumes:
      - ./apps/payment-service:/app/apps/payment-service
      - ./libs:/app/libs
      - ./prisma:/app/prisma
    networks:
      - nebengjek-network
    restart: unless-stopped

  # Matching Service
  matching-service:
    build:
      context: .
      dockerfile: ./deployment/docker/matching-service.dockerfile
    ports:
      - "${MATCHING_PORT:-3006}:${MATCHING_PORT:-3006}"
      - "${MATCHING_TCP_PORT:-8006}:${MATCHING_TCP_PORT:-8006}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MATCHING_PORT=${MATCHING_PORT:-3006}
      - MATCHING_TCP_PORT=8006
    volumes:
      - ./apps/matching-service:/app/apps/matching-service
      - ./libs:/app/libs
      - ./prisma:/app/prisma
    networks:
      - nebengjek-network
    restart: unless-stopped

  # Optional: Local PostgreSQL (commented out since using external)
  # postgres:
  #   image: postgres:15-alpine
  #   ports:
  #     - "${POSTGRES_PORT:-5432}:5432"
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - nebengjek-network

  # Optional: Local Redis (commented out since using external)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "${REDIS_PORT:-6379}:6379"
  #   command: redis-server --requirepass ${REDIS_PASSWORD:-}
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - nebengjek-network

networks:
  nebengjek-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${DOCKER_SUBNET:-172.20.0.0/16}

# volumes:
#   postgres-data:
#     driver: local
#   redis-data:
#     driver: local